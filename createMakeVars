#!/bin/bash

# Check for necessary tools and libraries
echo "Checking system configuration..."

# Check for R_HOME
if [ -z "$R_HOME" ]; then
  echo "R_HOME is not set. Please set it before running the configure script."
  exit 1
fi

# Check for StanHeaders
STANHEADERS_SRC=$(Rscript -e 'cat(system.file("include", "src", package = "StanHeaders", mustWork = TRUE))')

if [ -z "$STANHEADERS_SRC" ]; then
  echo "StanHeaders package not found or cannot locate its source files."
  exit 1
fi

# Check for RcppParallel
RCPPPARALLEL_CXXFLAGS=$(Rscript -e 'cat(RcppParallel::CxxFlags())')
RCPPPARALLEL_LIBS=$(Rscript -e 'cat(RcppParallel::RcppParallelLibs())')

# Check for StanHeaders C++ flags
STANHEADERS_CXXFLAGS=$(Rscript -e 'cat(StanHeaders:::CxxFlags())')
STANHEADERS_LDFLAGS=$(Rscript -e 'cat(StanHeaders:::LdFlags())')

# Get Rstan version and set STANC flags
RSTAN_VERSION=$(Rscript -e 'cat(as.character(utils::packageVersion("rstan")))')
if [[ "$RSTAN_VERSION" > "2.26" ]]; then
  STANC_FLAGS="-DUSE_STANC3"
else
  STANC_FLAGS=""
fi

# Set CXX Standard
CXX_STD="CXX17"

# Create Makevars file
cat <<EOF >src/Makevars
# Automatically generated by configure script. Do not edit by hand.

STANHEADERS_SRC = $STANHEADERS_SRC
STANC_FLAGS = $STANC_FLAGS
PKG_CPPFLAGS = -I"../inst/include" -I"\$(STANHEADERS_SRC)" -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DBOOST_MATH_OVERFLOW_ERROR_POLICY=errno_on_error \$(STANC_FLAGS)
PKG_CXXFLAGS = $RCPPPARALLEL_CXXFLAGS $STANHEADERS_CXXFLAGS
PKG_LIBS = $RCPPPARALLEL_LIBS $STANHEADERS_LDFLAGS
CXX_STD = $CXX_STD
EOF

echo "Configuration complete. src/Makevars file has been created."
